name: 'Develop'

on:
  push:
    branches: [ "develop" ]
  pull_request:

permissions:
  contents: read
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: sa-east-1
  LAMBDA_NAME: lambda
  BUCKET_CODE: bucket-cache-artifacts

jobs:

  # Build the code
  build:
    runs-on: ubuntu-latest

      
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      # NPM INstall
      - name: Install all dependencies
        working-directory: app
        run: npm install --frozen-lockfile

      # Package the code as zip
      - name: Packing
        working-directory: app
        run: |
          zip -r ../$LAMBDA_NAME.zip . *
          ls
      
      # AWS Config
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Upload Atifacts 
      - name: Upload Lambda package to S3
        run: |
          ls
          echo "aws s3 cp $LAMBDA_NAME.zip $BUCKET_CODE/$LAMBDA_NAME.zip"
          aws s3 cp $LAMBDA_NAME.zip $BUCKET_CODE/$LAMBDA_NAME.zip

      # Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform -chdir=infra init -backend-config="key=${{ steps.determine-key.outputs.tf_key }}"

      - name: Terraform Plan
        run: |
          terraform -chdir=infra plan -var-file=terraform.tfvars

      - name: Terraform Apply
        run: |
          terraform -chdir=infra apply -auto-approve -var-file=terraform.tfvars -var "code_key=$LAMBDA_NAME.zip" -var "bucket_source_code=$BUCKET_CODE"

      - name: Cleanup
        working-directory: app
        run: rm dist.zip


